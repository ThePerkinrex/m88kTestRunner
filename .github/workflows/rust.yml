name: Release

permissions:
    contents: write

on: [push]

jobs:
    create-release:
        runs-on: ubuntu-latest
        steps:
            - name: Get current date
              id: date
              run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
            - name: Test with environment variables
              run: echo $TAG_NAME - $RELEASE_NAME
              env:
                  TAG_NAME: nightly-tag-${{ steps.date.outputs.date }}
                  RELEASE_NAME: nightly-release-${{ steps.date.outputs.date }}
            - uses: actions/checkout@v3
            - name: Release snapshot
              id: release-snapshot
              uses: actions/create-release@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.date.outputs.date }}
                  release_name: Nightly ${{ steps.date.outputs.date }}
                  draft: false
                  prerelease: false

    upload-assets:
        strategy:
            matrix:
                os:
                    - ubuntu-latest
                    - macos-latest
                    - windows-latest
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v3
            - uses: taiki-e/upload-rust-binary-action@v1
              with:
                  # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
                  # Note that glob pattern is not supported yet.
                  bin: test_runner
                  # (optional) On which platform to distribute the `.tar.gz` file.
                  # [default value: unix]
                  # [possible values: all, unix, windows, none]
                  tar: unix
                  # (optional) On which platform to distribute the `.zip` file.
                  # [default value: windows]
                  # [possible values: all, unix, windows, none]
                  zip: windows
                  # (required) GitHub token for uploading assets to GitHub Releases.
                  token: ${{ secrets.GITHUB_TOKEN }}
