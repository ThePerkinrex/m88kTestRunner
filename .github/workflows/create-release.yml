name: Create release

on:
    - push

jobs:
    create_release:
        runs-on: ubuntu-latest
        outputs:
            upload_url: ${{ steps.release.outputs.upload_url }}
        steps:
            - name: Get current date
              id: date
              run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
            - name: Test with environment variables
              run: echo $TAG_NAME - $RELEASE_NAME
              env:
                  TAG_NAME: nightly-tag-${{ steps.date.outputs.date }}-${{ github.sha }}
                  RELEASE_NAME: nightly-release-${{ steps.date.outputs.date }}-${{ github.sha }}
            - uses: actions/checkout@v3
            - name: Release snapshot
              id: release
              uses: actions/create-release@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: nightly-tag-${{ steps.date.outputs.date }}-${{ github.sha }}
                  release_name: Nightly ${{ steps.date.outputs.date }} (${{ github.sha }})
                  draft: false
                  prerelease: true
            - name: result
              run: echo ${{ steps.release.outputs.upload_url }}

    upload-assets:
        strategy:
            matrix:
                os:
                    - ubuntu-latest
                    - windows-latest
                include:
                    - arch: amd64
                      file: test_runner
                    - target: linux
                      os: ubuntu-latest
                    - target: windows
                      os: windows-latest
                      file: test_runner.exe
        runs-on: ${{ matrix.os }}
        needs: create_release
        steps:
            - uses: actions/checkout@v3
            - name: Build
              run: cargo build --release
            # - uses: PeerXu/upload-asset@v1
            #   with:
            #       file: ${{ matrix.file }}
            #       os: ${{ matrix.target }}
            #       arch: ${{ matrix.arch }}
            #       with_tag: true
            #       with_sha1: true
            #       # suffix: .tar.gz
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
                  asset_path: target/release/${{ matrix.file }}
                  asset_name: ${{ matrix.target }}_${{ matrix.arch }}_${{ matrix.file }}
                  asset_content_type: application/octet-stream
